import express from 'express';
import webpush from 'web-push';
import bodyParser from 'body-parser';
import cors from 'cors';

const app = express();
app.use(cors());
app.use(bodyParser.json());

// VAPID keys generated by web-push
const vapidKeys = {
  publicKey: 'BMR5kcOL6Q4bl02dRNSPuvPElNQtyNRInvM47D6npe09WvvaQLBoaqDqRj7_TKPJmIsPUlllP3Rtfwl5iVwOlgY',
  privateKey: 'j2AZPHkK-6HkJF6OtBWQJKIcNz0Rknqyj37zJEHQIGs'
};

webpush.setVapidDetails(
  'mailto:your@email.com',
  vapidKeys.publicKey,
  vapidKeys.privateKey
);

// Store subscriptions in-memory for demo (use a DB in production)
const subscriptions = [];

app.post('/api/save-subscription', (req, res) => {
  const subscription = req.body;
  // Avoid duplicates
  if (!subscriptions.find(sub => sub.endpoint === subscription.endpoint)) {
    subscriptions.push(subscription);
  }
  res.status(201).json({ message: 'Subscription saved.' });
});

// Endpoint to trigger a push notification (for testing)
app.post('/api/send-reminder', async (req, res) => {
  const { title, body } = req.body;
  const notificationPayload = JSON.stringify({
    title: title || 'Habit Reminder',
    body: body || "It's time for your habit!"
  });

  const results = await Promise.all(subscriptions.map(sub =>
    webpush.sendNotification(sub, notificationPayload).catch(err => err)
  ));

  res.json({ results });
});

app.listen(4000, () => {
  console.log('Push server running on port 4000');
});
